<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">do3cc blog</title>
  <id>urn:uuid:3dea200e-c32c-377d-a59d-2d5294c23d66</id>
  <updated>2017-10-13T00:00:00Z</updated>
  <link href="http://do3.cc/blog/" />
  <link href="http://do3.cc/blog/category/plone/feed/atom/index.xml" rel="self" />
  <author>
    <name></name>
  </author>
  <generator uri="https://github.com/ajdavis/lektor-atom" version="0.1">Lektor Atom Plugin</generator>
  <entry xml:base="http://do3.cc/blog/2017/10/286/s2i_buildout/">
    <title type="text">Building Plone Docker images with S2I</title>
    <id>urn:uuid:0fff8774-f3d9-36e2-97c5-c93c3c104a46</id>
    <updated>2017-10-13T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2017/10/286/s2i_buildout/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;h4&gt;Docker images with Dockerfile&lt;/h4&gt;
&lt;div style=&quot;float: right&quot;&gt;
&lt;img src=&quot;/static/many_pictures.jpg&quot; alt=&quot;Many Paintings of different size on a wall&quot; title=&quot;Eevery image is different&quot;&gt;
&lt;br&gt;
&lt;i&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Alexandre_Brun_-_View_of_the_Salon_Carr%C3%A9_at_the_Louvre.jpg&quot;&gt;Painting&lt;/a&gt; under public domain&lt;/i&gt;
&lt;/div&gt;&lt;p&gt;When you want to package a Plone or Pyramid project as a Docker image, you usually write a Dockerfile. If you work on many projects, you will, over time, have many different Dockerfiles with only minor differences.
Just like with your buildout configs&lt;a href=&quot;/blog/2017/10/286/s2i_buildout/#1&quot;&gt;1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You now have many beautiful Dockerfiles, but they are all different.&lt;/p&gt;
&lt;h4&gt;Docker images with S2I&lt;/h4&gt;
&lt;p&gt;When you use &lt;a href=&quot;https://github.com/openshift/source-to-image&quot;&gt;S2I&lt;/a&gt; to package your project into a Docker image, you run the S2I command and tell him which build image to use with which repository.&lt;/p&gt;
&lt;p&gt;The build images and your project must follow some conventions and then it builds everything without the need to configure anything.&lt;/p&gt;
&lt;p&gt;Red Hat provides build-images for the most common programming languages and their most common build sysem.
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Buildout is not one of them.
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Using S2I with buildout&lt;/h4&gt;
&lt;p&gt;For testing purposes I wrote a builder image that supports buildout.&lt;/p&gt;
&lt;p&gt;Before you can play with it, follow the &lt;a href=&quot;https://github.com/openshift/source-to-image#installation&quot;&gt;instructions&lt;/a&gt; to install S2I.&lt;/p&gt;
&lt;p&gt;Next, create new directory with a single file named &lt;code&gt;buildout.cfg&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[buildout]
parts = instance
extends =
    https://dist.plone.org/release/5-latest/versions.cfg
versions = versions

[instance]
recipe = plone.recipe.zope2instance
eggs =
    Plone
    Pillow
user = admin:admin
event-log = disable
z2-log = disable
&lt;/code&gt;&lt;/pre&gt;
&lt;aside style=&quot;position: relative; top: -5em&quot;&gt;
Even though you declare to disable logs here, you still see the event logs in the console, because you will run zope in foreground mode.
&lt;/aside&gt;&lt;p&gt;Finally, build your project:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;s2i build -c . do3cc/buildout-centos7 minimal-build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is it, you have a working Docker image with Plone inside:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;docker run --interactive --tty --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --publish &lt;span class=&quot;m&quot;&gt;8080&lt;/span&gt;:8080 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    minimal-build
&lt;/pre&gt;&lt;/div&gt;
&lt;aside&gt;
You might have noticed a warning during startup, about unsafe permissions.
&lt;br&gt;
While I didn't verify it, I believe this happens in the end of the build process to keep the generated images &lt;a href=&quot;https://docs.openshift.org/latest/creating_images/guidelines.html#openshift-origin-specific-guidelines&quot;&gt;Openshift compatible&lt;/a&gt;.
&lt;/aside&gt;&lt;p&gt;If you access &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;, you will now get asked to create a Plone site. Don't do that just yet.&lt;/p&gt;
&lt;p&gt;Before you do that, let us prepare a persistent zope storage.&lt;/p&gt;
&lt;p&gt;Plone assumes that on startup there are already the necessary directories for storing data, and the zope2instance recipe created this structure, in our image.&lt;/p&gt;
&lt;p&gt;Let us extract that structure:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;docker run --interactive --tty --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    minimal-build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    tar cf - var &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tar xf -
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start a new container again, this time with the file system::&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;docker run --interactive --tty --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --publish &lt;span class=&quot;m&quot;&gt;8080&lt;/span&gt;:8080 --volume&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;PWD&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/var:/opt/app-root/src/var &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    minimal-build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now create a Plone site, then stop and start the docker container again. While the &lt;code&gt;--rm&lt;/code&gt; flag ensured that our container got deleted, the volume still contains our data.&lt;/p&gt;
&lt;h4&gt;Inspect the generated image&lt;/h4&gt;
&lt;p&gt;Looking into the var directory you just mounted into the container, you'll notice that no log files were generated.&lt;/p&gt;
&lt;p&gt;Docker can handle logs for you, if you send them to stdout. You are doing this.
See &lt;a href=&quot;https://docs.docker.com/engine/admin/logging/overview/&quot;&gt;https://docs.docker.com/engine/admin/logging/overview/&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;Let us inspect the docker image itself:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;docker run --interactive --tty --rm &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    minimal-build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    whoami
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My name is default, that certainly isn't root. Your container will never run as root and has no sudo permissions.&lt;/p&gt;
&lt;p&gt;When you inspect the docker images, you notice the size is huge:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;docker inspect do3cc/buildout-centos7
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;docker insepct minimal-build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our builder image is 750 MB in size, our Plone image 1.1 GB.&lt;/p&gt;
&lt;p&gt;Our image still contains the whole requirements to build our Plone site.&lt;/p&gt;
&lt;p&gt;S2I allows to specify a different Runtime image for running your app. This can make the image a bit smaller, but not much. It can help with security though. So if this is important for you, you might want to check out the documenation about &lt;a href=&quot;https://github.com/openshift/source-to-image/blob/master/docs/runtime_image.md&quot;&gt;runtime-image&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Q&amp;amp;A&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You might wonder if it possible to make the build process faster. Yes it is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;s2i build --incremental -c . do3cc/buildout-centos7 minimal-build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will look for an existing image &lt;code&gt;minimal-build&lt;/code&gt; and run a script to extract artifacts. These will then be streamed into the fresh image. Unfortunately, the required artifacts are so big that at least on a mac, this can still be slow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do I need to build a new image every time I change the code?&lt;/p&gt;
&lt;p&gt;No, the same way you can mount in a data volume, you can mount in your source code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can I customize the build process?&lt;/p&gt;
&lt;p&gt;Yes, if you need to configure mirrors or set proxies, you can create a &lt;code&gt;.s2i/environment&lt;/code&gt; file to add environment variables to your builder image and &lt;code&gt;.s2i/bin/assemble&lt;/code&gt; or &lt;code&gt;.s2i/bin/run&lt;/code&gt; scripts to modify the assemble process or the run process. Check out &lt;a href=&quot;https://github.com/openshift/source-to-image/blob/master/docs/user_guide.md&quot;&gt;https://github.com/openshift/source-to-image/blob/master/docs/user_guide.md&lt;/a&gt; for the details.
  If you need to install more packages, for example development header files for ldap, you are out of look here. In that case, you must write your own image builder. Just fork this image builder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What about my buildout config containing varnish, nginx, supervisor etc?&lt;/p&gt;
&lt;p&gt;This is up to you, I suggest to reduce the responsabilities of your buildout to just assemble Plone and use other tools for the rest&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is this production ready?&lt;/p&gt;
&lt;p&gt;We don't use this with Plone right now, so I can't tell.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;footnote&gt;
&lt;a name=&quot;1&quot;&gt;&lt;/a&gt;You &lt;em&gt;can&lt;/em&gt; have easily comparable buildout configs by using templates like the &lt;a href=&quot;https://github.com/starzel/buildout/&quot;&gt;Starzel buildout&lt;/a&gt; structure, together with the normalize_buildout tool from the &lt;a href=&quot;https://pypi.python.org/pypi/buildout-helpers/1.0.1&quot;&gt;buildout-helpers&lt;/a&gt; package.
Which you really should &amp;lt;/shameless plug&amp;gt;
&lt;/footnote&gt;</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2016/10/304/andreas-jung-arango-db/">
    <title type="text">Andreas Jung - Hunting for the best NoSQL database. Why we love ArangoDB</title>
    <id>urn:uuid:0e3af0b5-6970-3398-847f-7ff571e581ca</id>
    <updated>2016-10-30T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2016/10/304/andreas-jung-arango-db/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;NoSQL is not about performance, scaling, dropping ACID or hating sQL, it is about choice.&lt;/p&gt;
&lt;p&gt;Categories of NoSQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;key-value&lt;/li&gt;
&lt;li&gt;column oriented&lt;/li&gt;
&lt;li&gt;document based&lt;/li&gt;
&lt;li&gt;tabular&lt;/li&gt;
&lt;li&gt;graph&lt;/li&gt;
&lt;li&gt;xml/object db&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;New challenges&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cloud&lt;/li&gt;
&lt;li&gt;replication&lt;/li&gt;
&lt;li&gt;data explosion (big data)&lt;/li&gt;
&lt;li&gt;globally distributed systems&lt;/li&gt;
&lt;li&gt;specialised requirements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For this we need new solutions (nosql)&lt;/p&gt;
&lt;h2&gt;CAP Theorem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Availabilty&lt;/li&gt;
&lt;li&gt;Partition tolerance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Choose two (or less)&lt;/p&gt;
&lt;h2&gt;My personal hunt for a multi purpose nosql db&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Should fit most mid size projects&lt;/li&gt;
&lt;li&gt;document store&lt;/li&gt;
&lt;li&gt;arbitrary queries&lt;/li&gt;
&lt;li&gt;cross table relationships&lt;/li&gt;
&lt;li&gt;Transactional integrity, ACID, optional&lt;/li&gt;
&lt;li&gt;replication/clustering&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;FoundationDB&lt;/h2&gt;
&lt;p&gt;Got bought by Apple and killed&lt;/p&gt;
&lt;h2&gt;MarkLogic&lt;/h2&gt;
&lt;p&gt;Highend expensive solution.
higly professional, feature complete,
saved Oama Care&lt;/p&gt;
&lt;h2&gt;ArangoDB&lt;/h2&gt;
&lt;p&gt;A multi model database:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;Key Value&lt;/li&gt;
&lt;li&gt;Graph database&lt;/li&gt;
&lt;li&gt;models can be combined&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Foxx framework&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;implement you own rest micro services directly in javascript inside arango db&lt;/li&gt;
&lt;li&gt;batteries included, job queue&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;AQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;declarative human readable DSL for queries&lt;/li&gt;
&lt;li&gt;Query both documents and graphs&lt;/li&gt;
&lt;li&gt;ACID Suppport&lt;/li&gt;
&lt;li&gt;Easy to understand if you know sql.
(Now a code sample)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Clustering, replication, sharding&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Agency (cluster control via raft consensus protocol)&lt;/li&gt;
&lt;li&gt;synchronous/async replication with automatic failover&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;Lots of hard to read images showing that Arango is quite fast&lt;/p&gt;
&lt;h2&gt;Python bindings&lt;/h2&gt;
&lt;p&gt;Hard to read again, but apparently you can treat a Arango document a bit like a dict.&lt;/p&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Current version 3.0&lt;/li&gt;
&lt;li&gt;good documentation&lt;/li&gt;
&lt;li&gt;regular updates&lt;/li&gt;
&lt;li&gt;good community support.&lt;/li&gt;
&lt;li&gt;supported by ArangoDB Gmbh in Cologne (\o/)&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2016/10/304/jonathan-stoppani-managing-dependencies-of-python-projects-pyconde16/">
    <title type="text">Jonathan Stoppani - Managing dependencies of Python projects pyconde16</title>
    <id>urn:uuid:3b681801-e0d2-3fec-b9b4-898238e0aa8e</id>
    <updated>2016-10-30T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2016/10/304/jonathan-stoppani-managing-dependencies-of-python-projects-pyconde16/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;Assumptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You use isolated envs&lt;/li&gt;
&lt;li&gt;You use pip&lt;/li&gt;
&lt;li&gt;You work on products, not libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Part 1&lt;/h2&gt;
&lt;p&gt;You start with::&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install django
pip install boto...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now lets deploy.
SSH to server, copy dist files, copy source, talk done!&lt;/p&gt;
&lt;p&gt;Second deployment:&lt;br/&gt;
O, missed dependencies.
requirements.txt to the rescue&lt;/p&gt;
&lt;p&gt;Third deployment:&lt;br/&gt;
Everything breaks again, because you did not pin your packages yet.&lt;/p&gt;
&lt;p&gt;Fourth deployment:&lt;br/&gt;
Also pin dependencies of your dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pip does not check that your dependencies are consistent to each other.&lt;/p&gt;
&lt;p&gt;pip-tools helps with that.&lt;/p&gt;
&lt;p&gt;pip-compile recursively compiles dependencies together and checks for consistency&lt;/p&gt;
&lt;p&gt;Workflow:&lt;br/&gt;
Create a requirement.txt.in with top level requirements.&lt;br/&gt;
Run pip-compile, and the requirements.txt contains all pinned requirements.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Every time you run pip-compile, the second level dependencies get updated again.
If after that, tests fail, you must update your requirements.txt.in to document
the known incompatibility.&lt;/p&gt;
&lt;h2&gt;Part 2&lt;/h2&gt;
&lt;p&gt;Number:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5k websites,&lt;/li&gt;
&lt;li&gt;400 daily deployments.&lt;/li&gt;
&lt;li&gt;2 indexes (devpi)&lt;/li&gt;
&lt;li&gt;15 top level and 120 total distributions&lt;/li&gt;
&lt;li&gt;Goal: deploy in less than 2 minutes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pip compile takes time and can be platform specfic.
pip install takes time to resolve distributions, resolves depdencies and install the distributions.&lt;/p&gt;
&lt;p&gt;Our solution: wheelsproxy
a pypi proxy, builds wheels, knows abouts platform.
&lt;a href=&quot;http://github.com/divio/ac-wheelsproxy&quot;&gt;http://github.com/divio/ac-wheelsproxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uses docker to build wheels for the different platforms.&lt;/p&gt;
&lt;p&gt;pip install went down from 180 seconds to 15 seconds.&lt;/p&gt;
&lt;p&gt;Demo time:
reqs.in file with 15 requirements.
uploads reqs.in to wheelsproxy, then pip compile runs on the server with cached data.
pip installed django with 120 requirements in 40 seconds.&lt;/p&gt;
&lt;p&gt;Summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use pip-compile (thanks @nvie)&lt;/li&gt;
&lt;li&gt;Have test coverage to know that updated packages will work&lt;/li&gt;
&lt;li&gt;Cache your built wheels&lt;/li&gt;
&lt;li&gt;Scale up with the wheelsproxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Questions:
What about tools to see if there are newer versions.&lt;br/&gt;
Answer: you committed the reqs.txt, so run git-compile again and check the diff.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2016/10/303/saturday-lighting-pyconde16/">
    <title type="text">Lightning Talks Saturday</title>
    <id>urn:uuid:fe54f29c-5171-3998-9222-d4e07ef8516b</id>
    <updated>2016-10-29T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2016/10/303/saturday-lighting-pyconde16/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;h2&gt;Alex Hendorf&lt;/h2&gt;
&lt;p&gt;First Europython 2017 Announcement.&lt;br/&gt;
We had lots of proposals.&lt;br/&gt;
We choose Rimini.&lt;br/&gt;
Lots of applause after some nice pictures.&lt;br/&gt;
Conference center got awarded as best Conference center.&lt;br/&gt;
Good Hotel rates. No Airport in Rimini, come via Bologna.&lt;br/&gt;
Like last year in July.&lt;br/&gt;
&lt;a href=&quot;http://www.europython.eu&quot;&gt;http://www.europython.eu&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Reimar Bauer&lt;/h2&gt;
&lt;p&gt;Pythoncamp 8.- 9. April 2017&lt;br/&gt;
Cologne, Free entrance.&lt;br/&gt;
&lt;a href=&quot;http://www.pythoncamp.de&quot;&gt;http://www.pythoncamp.de&lt;/a&gt;&lt;br/&gt;
Different to conference&lt;br/&gt;
Everybody should give a talk.&lt;br/&gt;
Last year 70 attendees and 60 talks.&lt;br/&gt;
Need sponsors.&lt;br/&gt;
Need organizers.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Daniele Procida&lt;/h2&gt;
&lt;p&gt;Wanted a Python adventures in Africa.&lt;br/&gt;
Had a dream of doing something with python in africa.&lt;br/&gt;
python Namibia 2015&lt;br/&gt;
Python Namibia 2016&lt;br/&gt;
It is easy to get to Namibia. From Frankfurt go to south afrika, shortly&lt;br/&gt;
before, turn right.&lt;br/&gt;
Venue in Windhoek.&lt;br/&gt;
118 attendees, 50% women (lost the rest from the slides)&lt;br/&gt;
4 days program&lt;br/&gt;
Many sponsors (Django)&lt;br/&gt;
PSF supported with 50 preconfigured Raspberry Pi&lt;br/&gt;
Got a lot of press coverage, well received.&lt;br/&gt;
As a result now also a Pycon Zimbabwe 2016&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Steffen Allner&lt;/h2&gt;
&lt;p&gt;Zope's not dead&lt;br/&gt;
We talked with Plone. We don't want it dead.&lt;br/&gt;
Would like to move to Python 3. 30 people in a sprint.&lt;br/&gt;
People use it: In routers, for other CMS than Plone...&lt;br/&gt;
Successful sprint in Halle.&lt;br/&gt;
RestrictedPython is main difficulity for Python 3.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Roadmap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q1.2017 RestrictePython&lt;/li&gt;
&lt;li&gt;Q2. Working Zope app&lt;/li&gt;
&lt;li&gt;Q3 2. Resurrection spring&lt;/li&gt;
&lt;li&gt;Q4. Zope Release with Py3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Join us. &lt;a href=&quot;http://www.meetup.com/de-DE/Zope-Sprint/&quot;&gt;http://www.meetup.com/de-DE/Zope-Sprint/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Claus Aiohinger&lt;/h2&gt;
&lt;p&gt;Announcement Pycon2017 Slovakia.
10.3.-12.3. 2017 in Bratislava&lt;/p&gt;
&lt;p&gt;CFP is still open. Looking for first time speaker specifically&lt;/p&gt;
&lt;p&gt;Please come!&lt;/p&gt;
&lt;h2&gt;coala Team&lt;/h2&gt;
&lt;p&gt;Coala. Tradtion in giving Lighting talk.&lt;br/&gt;
Coala for linting and fixing every programming language&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Would you want to rewrite Libreoffice to add spellchecker for another language?&lt;br/&gt;
Then why do you do it with linting tool?&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Coala provides a framework to reuse linting tools for many languages.&lt;br/&gt;
Support 56 languages. 57 since 5 minutes.&lt;br/&gt;
We wrap existing tools.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Coala can not only find problems, but also fix them.&lt;/p&gt;
&lt;p&gt;Got something new: Moving from declaring the tools to use for checking to
declaring what type of checks to run, independent of programming languages.
We are looking for sponsors.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://coala.io/usability&quot;&gt;http://coala.io/usability&lt;/a&gt;&lt;br/&gt;
Win a shirt, beer or chocoloate.&lt;/p&gt;
&lt;h2&gt;Max Scholz&lt;/h2&gt;
&lt;p&gt;(This is a bit incomplete, the speaker spoke in long sentences that are hard to follow if you try to summarize them in parallel. please watch the talk to get more sense out of it)&lt;/p&gt;
&lt;p&gt;I told the story already at europython.&lt;br/&gt;
It is about me trailing in sweden.&lt;br/&gt;
3 years ago I needed a break from university and humans.&lt;br/&gt;
It was the first time I walked, it was new for me to be alone. I took a camera and made pictures. Most of my memories were pictures.&lt;br/&gt;
2 years ago I went again. This time, instead of taking pictures of things I liked, I just sat down and enjoyed it.&lt;br/&gt;
One time, I sat for 2 hours and was suddenly full of flies. Why I am the king of flies I thought. Maybe because I was sweating?&lt;br/&gt;
My gist: If you go for a walk, take your time, don't waste time making pictures, enhjoy your leisure time to the fullest and just watch.&lt;br/&gt;
My difference to europython conference talk:&lt;br/&gt;
I did not want to emphafize to never take pictures. I don't want to document what I am doing, I just want to enjoy what I am experiencing.&lt;br/&gt;
Be mor mindful about what you experience.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Christian Barra&lt;/h2&gt;
&lt;p&gt;PyData Poland Announcement&lt;br/&gt;
First national PyData Conference.&lt;br/&gt;
Topics:&lt;br/&gt;
PythonR Julia Databases Machine learning npp....&lt;br/&gt;
3 day conf Friday to Sunday&lt;br/&gt;
Probably during Spring 2017&lt;br/&gt;
Nno definitive location yet. Somwhere in Poland.&lt;br/&gt;
&lt;a href=&quot;http://www.pydata.pl&quot;&gt;http://www.pydata.pl&lt;/a&gt; (Not working yet)&lt;br/&gt;
Who wants to join?&lt;br/&gt;
We aready have a CoC.&lt;br/&gt;
We want to have a track: Women in pydata.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;We need sponseors, co-organizers, speakers...&lt;/p&gt;
&lt;h2&gt;Mike Muller&lt;/h2&gt;
&lt;p&gt;PySV&lt;br/&gt;
Serving the german speaking python community&lt;br/&gt;
pysv.org&lt;br/&gt;
Representing the community&lt;br/&gt;
organizes as german foundation&lt;br/&gt;
Mike Muller Reimar Bauer Thomas Fabula are in the current Board&lt;br/&gt;
We support Usergroups, Events, Public Relations.&lt;br/&gt;
Or help is ogranisational, financial, technical (Infrastructure)&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;We are organized in working groups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PyConDE&lt;/li&gt;
&lt;li&gt;Public Relations&lt;/li&gt;
&lt;li&gt;external networks&lt;/li&gt;
&lt;li&gt;communities...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coordination happens via monthly irc meetings.&lt;br/&gt;
Open for all.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Become a member:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Personal member&lt;/li&gt;
&lt;li&gt;freelancer&lt;/li&gt;
&lt;li&gt;Companies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;General Assembly: Today 18:00 room Omega (Board Election)&lt;/p&gt;
&lt;p&gt;Personal statement:&lt;br/&gt;
As part of the plonekonf2012 Orga Team, I can testify that there would not have been a conference without the support from PySV. Thank you!&lt;/p&gt;
&lt;h2&gt;Anselm Kruis&lt;/h2&gt;
&lt;p&gt;State of Stackless python&lt;br/&gt;
Today I tagged Stackless 2.7.12.&lt;br/&gt;
No funding for mainting Python 3, 3.3 works, 3.4 has bugs, 3.5 crashes&lt;br/&gt;
Volunteers are welcome&lt;br/&gt;
Join us: https//bitbucket.org/stackless-dev/stackless&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Martin Christen&lt;/h2&gt;
&lt;p&gt;Geo python 2017&lt;br/&gt;
May 8-10 in Basel, Switzerland&lt;br/&gt;
Call for Contributors&lt;br/&gt;
Last event in June&lt;br/&gt;
&lt;a href=&quot;http://2016.geopython.net&quot;&gt;http://2016.geopython.net&lt;/a&gt;&lt;br/&gt;
This year&lt;br/&gt;
&lt;a href=&quot;http://2017.geopython.net&quot;&gt;http://2017.geopython.net&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;GIS, Big Data... Machine Learning&lt;/p&gt;
&lt;p&gt;@GeoPythonConf&lt;/p&gt;
&lt;h2&gt;Benedikt Eggers Markus Schaber&lt;/h2&gt;
&lt;p&gt;Ironpython&lt;br/&gt;
We are working on it again, after it turned dead, after microsoft dropped it.&lt;br/&gt;
Python written in native C#&lt;br/&gt;
Complete integration, most of python stdlib is there.&lt;br/&gt;
You can use .netlibraries/assemblies together. Just import them as if they were
python&lt;br/&gt;
(Code example)&lt;br/&gt;
Writing class in C#, in direct import in IronPython&lt;br/&gt;
Ironpython is not dead any more&lt;br/&gt;
10 active contributors.&lt;br/&gt;
Now works on all(?) .net platforms, not only windows.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Anreas Kopp&lt;/h2&gt;
&lt;p&gt;Hackerspace: &lt;a href=&quot;http://www.erfindergarden.de&quot;&gt;http://www.erfindergarden.de&lt;/a&gt;
Munich, Kolumbuspplatz&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;3dprinting&lt;/li&gt;
&lt;li&gt;rasbperry pi&lt;/li&gt;
&lt;li&gt;lasercutter&lt;/li&gt;
&lt;li&gt;fun&lt;/li&gt;
&lt;li&gt;play
Planned to be a non profit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fab Academy 2016 a 5 month program
You get a diploma from Chile.
fabacademy.org&lt;/p&gt;
&lt;h2&gt;Emil&lt;/h2&gt;
&lt;p&gt;Our conf wifi.&lt;br/&gt;
Shows how to install something for the wifi. But why?&lt;br/&gt;
Some live hacking for the install script.&lt;br/&gt;
Oh, he is making a live demo with a non licenced sublime.&lt;br/&gt;
So my seating neighbors told me the script was supposed to install the required
certificate to make the Enterprise WPA Login work.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Orga team&lt;/h2&gt;
&lt;p&gt;Best image tweet&lt;br/&gt;
(Hope it will be mine)&lt;br/&gt;
&lt;img src=&quot;/static/snake.jpg&quot; alt=&quot;Not the python conference you were looking for&quot;&gt;&lt;br/&gt;
Ok, I won a quadrocopter, anybody has 4 AAA batteries?&lt;br/&gt;
Thank you!&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Now beer&lt;br/&gt;&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2016/04/92/better-test-isolation-in-plone/">
    <title type="text">Better test isolation in Plone</title>
    <id>urn:uuid:d318649c-f81e-374c-8717-917cc832f139</id>
    <updated>2016-04-01T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2016/04/92/better-test-isolation-in-plone/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;Thanks to Martin Aspeli, we finally have tests with proper test isolation.&lt;br/&gt;
Unfortunately, it is still easy to break that isolation.&lt;/p&gt;
&lt;p&gt;Integration tests are fast tests, because they reuse the transaction machinery for cleaning up. After each test, a &lt;code&gt;transaction.abort()&lt;/code&gt; will make sure that all your changes get wiped away.
Functional tests wrap the database with a DemoStorage which gets torn down between each test. These functional tests are important when you want to make zope.testbrowser tests or when you want to test things that only happen on commits, like updates to the catalog.
Now, if you decide to call &lt;code&gt;transaction.commit()&lt;/code&gt; by yourself in an integration test, the &lt;code&gt;transaction.abort()&lt;/code&gt; cannot abort what you changed before your &lt;code&gt;transaction.commit()&lt;/code&gt;. Congratulations, you broke the test isolation.
In plone.testing 5.0.0, integration tests monkey patch the &lt;code&gt;transaction.commit()&lt;/code&gt; method and will throw an exception with a helpful error message. So you see immediately if your tests break isolation.&lt;/p&gt;
&lt;p&gt;Plone.app.testing has to do a lot of monkey patching to isolate tests.&lt;/p&gt;
&lt;p&gt;ZopeTestCase has to do a lot of monkey patching to isolate tests.&lt;/p&gt;
&lt;p&gt;They patch different things. When ZopeTestCase does the monkey patching, the plone.app.testing patches stop working properly. Unfortunately,  no error gets triggered, but every functional test works against the same database and not the DemoStorage wrapper. In &lt;code&gt;plone.testing&lt;/code&gt; 5.0.0 plone.testing notices this and throws an exception with an Exception, explaining what is going wrong.&lt;/p&gt;
&lt;p&gt;If you want to use these features, you have to pin plone.testing by yourself. It might take a bit of time until plone.testing 5.0.0 is in the official version list of Plone. Both changes break a few tests in various Plone packages.&lt;/p&gt;
&lt;p&gt;If you want to help with this. &lt;a href=&quot;https://github.com/plone/Products.CMFPlone/issues/447&quot;&gt;Test Isolation Failures&lt;/a&gt; lists the packages that try to commit things in Integration tests.
&lt;a href=&quot;https://github.com/plone/buildout.coredev/pull/155&quot;&gt;PR for newer zope.testruner&lt;/a&gt; lists the packages that mix plone.app.testing with ZopeTestCase.&lt;/p&gt;
&lt;p&gt;If you mixed up functional and integration tests in the past, the &lt;a href=&quot;http://training.plone.org&quot;&gt;Plone Training manual&lt;/a&gt;  has a summary on &lt;a href=&quot;http://training.plone.org/5/testing.html&quot;&gt;tests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Go use plone.testing 5.0.0!&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2012/09/264/debugging-zcrelations---broken-btrees/">
    <title type="text">Debugging zc.relations / Broken BTrees</title>
    <id>urn:uuid:44b4148e-5e3a-3c75-91c0-d7d0babc2687</id>
    <updated>2012-09-20T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2012/09/264/debugging-zcrelations---broken-btrees/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;Lately we encountered a serious problem with a site.
The site uses Dexterity and our content objects have relationfields.
In the beginning of the Project, we had a dependency on Products.LinguaPlone but removed it later in favor of plone.multilingual.&lt;/p&gt;
&lt;p&gt;Sometimes, removing a product is hard, especially if persistent utilites are involved. Luckily, one can remove persistent utilities with wildcard.fixpersistentutiliries.&lt;/p&gt;
&lt;p&gt;So we thought we are pretty safe now, but after a while the following traceback crept up:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1348150731.020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;336585243806&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;somesite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edit&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;innermost&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZPublisher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;126&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publish&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZPublisher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapply&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZPublisher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call_object&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z3cform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__call__&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z3cform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dexterity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z3cform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldsets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extensible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z3cform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GroupForm_update&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z3c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;138&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z3c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z3c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;315&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__call__&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z3c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__call__&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dexterity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handleApply&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z3c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;119&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applyChanges&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notify&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatch&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;136&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;321&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;585&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectEventNotify&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;136&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;321&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;585&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z3c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relationfield&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updateRelations&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catalog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;546&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unindex&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catalog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;556&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unindex_doc&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catalog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;621&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_remove&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterfaceClass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wildcard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixpersistentutilities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classfactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IFakeInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In that line of code, zc.relation tries to extract the key &lt;code&gt;&amp;lt;InterfaceClass wildcard.fixpersistentutilities.classfactory.IFakeInterface&amp;gt;&lt;/code&gt; from an OOBtree.
That OOBTree claimed that the OOBTree does not contain that key, but when iterating over the keys of the OOBTree, the key was right there.&lt;/p&gt;
&lt;p&gt;After a lot of reading the wrong docs (I assumed that the key really does not exist in the BTree and assumed I found a bug in zc.relation, thus trying to understand zc.relation internals first) I reread the documentation of BTrees itself, especially the part about &lt;a href=&quot;http://www.zodb.org/documentation/guide/modules.html#total-ordering-and-persistence&quot;&gt;Total Ordering and Persistence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It turned out that the IFakeInterface from above was not in the correct order. I used the check() method from BTree.check on the btree to confirm that.&lt;/p&gt;
&lt;p&gt;Luckily, there is a fast way to repair a BTree so I went on to fix it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OPlone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;zope.component&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getUtility&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;zc.relation.interfaces&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICatalog&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catalog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICatalog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;btree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catalog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_name_TO_mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;to_interfaces_flattened&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catalog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_name_TO_mapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;to_interfaces_flattened&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;btree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__class__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;btree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Creating a copy of the BTree will readd everything in the right order.&lt;/p&gt;
&lt;p&gt;I am going to improve the error reporting in zc.relation to give a better hint of what might be wrong, but I am not sure of a good way to repair such a problem automatically.&lt;/p&gt;
&lt;p&gt;Anyway, I hope this helps!&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2011/09/272/security-patch-party-auf-der-pycon-de/">
    <title type="text">Security Patch Party auf der PyCon DE</title>
    <id>urn:uuid:388a7c7a-c7f9-34b2-abf3-554f17aad06d</id>
    <updated>2011-09-29T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2011/09/272/security-patch-party-auf-der-pycon-de/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;Pünktlich zu der deutschen &lt;a href=&quot;http://de.pycon.org/2011/home/&quot;&gt;Python Konferenz in
Leipzig&lt;/a&gt; wird einer der seltenen
Security Patches für Plone veröffentlicht.&lt;/p&gt;
&lt;p&gt;Dieses wurde im Vorfeld angekündigt, damit sich alle Anwender von
Plone vorbereiten können, um den Patch zeitnah zur Veröffentlichung
einzuspielen. Wer ganz auf Nummer sicher gehen möchte, fährt seine
Dienste kurz vor der Veröffentlichung runter, installiert sofort nach
Veröffentlichung den Patch und fährt danach Plone wieder hoch. Dank
der guten Vorbereitung durch das Plone Security Team sind diese
Schritte bei den letzten Patches immer reibungslos verlaufen.&lt;/p&gt;
&lt;p&gt;Dieses mal findet die Veröffentlichung lustigerweise gegen Ende
unseres 
Plone-Tutorials auf der PyCon DE statt. Wir haben uns daher kurzfristig
dazu entschlossen, im Anschluss an unser Tutorial eine Patch Party zu
machen. Jeder der auch Plone Seiten patchen muss ist herzlich
eingeladen, am Dienstag den 4.10. ab etwa 16:45 zu unserer &lt;a href=&quot;http://de.pycon.org/2011/schedule/sessions/13/&quot;&gt;Plone Schulung&lt;/a&gt; zu
kommen. Dieses Angebot gilt sowohl für alte Hasen die genau wissen was
sie tun als auch für Neulinge die sich unsicher sind, ob sie den Patch
ohne Probleme einspielen können. Die alte Hasen können den neuen Hasen
dann helfen ihre Seiten zu patchen.&lt;/p&gt;
&lt;p&gt;Falls notwendig erklären wir bis
17:00, wie man den Patch vorbereiten muss und geben Tipps um zu
prüfen, ob man beim Patchen mit Problemen rechnen muss. Zudem verraten wir wie wir all die Seiten, die wir auf den verschiedensten Servern betreuen, weitgehend automatisiert patchen.&lt;/p&gt;
&lt;p&gt;Happy Patching!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/static/drunken_dog.jpg&quot; alt=&quot;Not this kind of party&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hier hat jemand Patch Party missverstanden&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2011/06/181/europython-and-pyramid-crud-sprint/">
    <title type="text">Europython and Pyramid CRUD Sprint</title>
    <id>urn:uuid:d2387e69-e871-3839-b903-8fc1d514c65c</id>
    <updated>2011-06-30T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2011/06/181/europython-and-pyramid-crud-sprint/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;When I heard that there will be a Pyramid sprint directly before the
Europython conference, I knew I have to attend to both events.
So I did, and after 15 years I visited Italy again.&lt;/p&gt;
&lt;p&gt;The Italy events began in Bologna, where RedTurtle started to be
outstanding hosts by picking Gael Pasgrimaud and me up. The sprint,
which took place in the RedTurtle office in Ferrara, went very well
and we got a lot of improvements going.  You can read about all the
details in the &lt;a
href=&quot;http://blog.redturtle.it/redturtle-blog/pyramid-crud-sprint-summary&quot;&gt;RedTurtle
Blog&lt;/a&gt;, so I shouldn't repeat myself here.  As I wasn't very familiar
with the code base, I took care of the outer parts, but I hope it will
show to be a worthwhile contribution.  RedTurtle was an awesome host,
not only did they teach me a lot about italian food and conventions, they
cured me from my coca cola addiction!&lt;/p&gt;
&lt;p&gt;Europython 2011 was a blast! In average, the talks were more hands on
than talks at Plone conferences. The talk from which I
learned the most was the &lt;a
href=&quot;http://ep2011.europython.eu/conference/talks/pitfalls-of-continuous-deployment&quot;&gt;Pitfalls
of Continuous deployment&lt;/a&gt; talk by David Cramer, I heartily suggest
to watch the video of that one.  Another talk you should really have a
look at is &lt;a
href=&quot;http://ep2011.europython.eu/conference/talks/how-to-build-complex-web-applications-having-fun&quot;&gt;How
to build complex web applications having fun&lt;/a&gt; from Andrew
Mleczko. If I would not have done something similar already, I would
have had problems following anything else interesting during the day
because my brain would have been busy imaging what kind of cool things
I could do, combining Pyramid and Plone. So go watch it!&lt;/p&gt;
&lt;p&gt;The venue and the organisation was very good. As you maybe have
noticed, internet wasn't, but I heard the organization team tried a
number of things to improve that and succeeded some improvements in
short time. Unfortunately it wasn't enough to get a good internet.
During the first day, the Europython team made a joke about Italians and
organizing, but during the conference they proved all prejudice wrong.
In fact, I was more than glad that they would walk the extra mile and
get some tickets for the &lt;a href=&quot;http://ep2011.europython.eu/blog/2011/05/18/pyfiorentina-legendary-steak&quot;&gt;PyFiorentina event&lt;/a&gt; even for those who
actually came too late (Like me). They did all this extra work while organizing
the conference, and I am not sure I would receive that much attention
on many other conferences.&lt;/p&gt;
&lt;p&gt;My setup improved a bit in comparison to my last trips.  Unfortunately
I did not get my small laptop in time so I was carrying a large brick
as always. The Europython team organized Italian prepaid sim cards
with data tariffs, so I always had internet on the phone and used it a
lot. My phones battery was usually depleted around lunch time.  Due to
some accident, I ended up with an universal power supply before the
conference started. I got a thin one, about 1 cm of height with an
additional usb port. That proved to be really practical. In Bristol I
was carrying my laptop half open more than once, just to keep my
mobile phone charging, this time it was always in my laptop bag,
already connected to my power supply, and whenever I recharged my
computer, my phone would get its charge too.&lt;/p&gt;
&lt;p&gt;I'll never to live demos again. While all went well, clicking through
something takes ages when several hundred people are watching you. I
started to question my complete Plone talk while moving the mouse or
watching the page reload, thus I completely lost the timing for the
joke I was going to give.From some people I got the feedback that I
should have mentioned more stuff. A full talk about Plone might have
been in order, since interest was high. Only after the talk I
realized, that I explained that it is possible to create browser views
without writing zcml, but I did not mention at all, what to look for
to find out how! So, if you are curious, look for the dexterity
manual, it explains it all.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2011/01/11/better-debugging-with-pdbpp/">
    <title type="text">Better debugging with pdbpp</title>
    <id>urn:uuid:c1d03538-1de9-367d-bef1-208d0a39f098</id>
    <updated>2011-01-11T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2011/01/11/better-debugging-with-pdbpp/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;A short while ago I found out about an alternative to ipdb, &lt;a href=&quot;http://pypi.python.org/pypi/pdbpp/&quot;&gt;pdbpp&lt;/a&gt;.
among other features pdbpp offers, tab completion, syntax highlighting better code display (sticky mode).
It extends pdb so &lt;code&gt;import pdb;pdb.set_trace()&lt;/code&gt; still works.&lt;/p&gt;
&lt;p&gt;Sadly, there is a single thing one has to do to make it work with zope.
When pdb fires up, it loads some third party tools, one of them being pyrepl.
Pyrepl tries to register some signal handlers and this is usually impossible in your code because you are just in a simple thread where this is forbidden.
You will get the wrong error message:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.blogger.com/goog_530477067&quot;&gt;AttributeError: UnixConsole instance has not attribute 'old_sigwinch'&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get around this issue, create a file in your home directory named .fancycompleterrc.py
and add the following content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fancycompleter&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultConfig&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;prefer_pyrepl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pdbpp uses the fancycompleter for tab completion and we change the preferences here, so that pyrepl won't be used any longer.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://do3.cc/blog/2010/08/232/do-not-catch-import-errors,-use-pkg_resources/">
    <title type="text">Do not catch import errors, use pkg_resources</title>
    <id>urn:uuid:83dbf910-b98e-3bab-848f-6e6fc2c77aed</id>
    <updated>2010-08-20T00:00:00Z</updated>
    <link href="http://do3.cc/blog/2010/08/232/do-not-catch-import-errors,-use-pkg_resources/" />
    <author>
      <name>Patrick Gerken</name>
    </author>
    <content type="html">&lt;p&gt;After debugging a funny problem in tests which came from Circular
Imports that got eaten, let me show you how you can test, if some
package is available, and how you can test, if that package is new
enough:&lt;/p&gt;
&lt;p&gt;So, this is a common snippet:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Products.LinguaPlone&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ImportError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HAS_LINGUA_PLONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HAS_LINGUA_PLONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That might trigger circular import exceptions. It will not always fail, depending
on what gets imported first. The circular import gets caught by the &quot;except ImportError:&quot; line. So you will not see an exception here, but in some other funny place. 
Good luck debugging that.&lt;/p&gt;
&lt;p&gt;Another thing that I see sometimes is a check to implement backward compatibility&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try:
    from foo import new_thing
except ImportError:
    OLD_FOO = True
else:
    OLD_FOO = False

if OLD_FOO:
    def new_thing(something):
    return something + 'cool'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can sometimes trigger ImportErrors and it does not show its intention like it could.&lt;/p&gt;
&lt;p&gt;pkg_resources has an API which can help you to clarify things:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pkg_resources
try:
    pkg_resources.get_distribution('Products.LinguaPlone&amp;gt;=4.0.0')
except pkg_resources.DistributionNotFound:
    HAS_LINGUA_PLONE = False
    HAS_CURRENT_LINGUA_PLONE = False
except pkg_resources.VersionConflict:
    HAS_LINGUA_PLONE = True
    HAS_CURRENT_LINGUA_PLONE = False
else:
    HAS_LINGUA_PLONE = True
    HAS_CURRENT_LINGUA_PLONE = True
`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, that is a bit more verbose, but&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It avoids hideous ImportErrors&lt;/li&gt;
&lt;li&gt;We don't try to import things and can't trigger circular exceptions&lt;/li&gt;
&lt;li&gt;It spells out its dependencies more clearly&lt;/li&gt;
&lt;li&gt;You can see in the code which version is needed for the workaround&lt;/li&gt;
&lt;li&gt;The chance that totally outdated workarounds will get removed is bigger.&lt;/li&gt;
&lt;li&gt;If someone sees a try: import, they most probably do not know for
which version it was necessary. On the other hand, if they see the
version requirement in plain code, they might have an idea that this
is a test for a VERY outdated version of a dependency and might decide
to delete it, since the package does not support the old version in
other parts of the code anyway.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
